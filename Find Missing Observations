/*
 * Time Complexity : O(N) O(len) qədər .reduce methodunda O(n) qədər while dövründə zaman tələb olunur.
 * Space Complexity : O(n) n qədər element saxlanılacaq listdə.
 * */
import 'dart:math';
class Solution {
  List<int> missingRolls(List<int> rolls, int mean, int n) {
    int len = rolls.length;
    List<int> result = [];
    int dif = (len + n ) * mean - rolls.reduce((a , b) => a + b);
    if(dif < n || dif > n * 6) return [];
    while(n >0){
        int dice = min(dif - n + 1 , 6);
        result.add(dice);
        dif -=dice;
        n--;
    }
    return result;       
  }
}
void main() {
  Solution sol = Solution();
  List<int> rolls = [1,5,6];
  int mean = 3;
  int n = 4;  
  
  print(sol.missingRolls(rolls , mean , n));
}
