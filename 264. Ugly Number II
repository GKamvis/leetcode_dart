/*
Time Complexity : O(N) for dövrü N qədər artır. Komentdə olan kod təxminimcə O(n log n) ola bilər çünki isUgly funksiyasi log n qədər for dövrü isə n * M qədər dövr edəcək.
Çünki Sayı tamamlamaq üçün n dəyişənidə artır dövr süni şəkildə atır.
Space Complexity: O(N) bir list var oda max n qədər yer tələb edəcək. KOmentdə olanda O(N) qədər yadddaş tələb edəcək.
*/

class Solution {
  int? nthUglyNumber(int n) {
    int i2  = 0;
    int i3  = 0;
    int i5  = 0;


    List<int> list = [1];
     int next = 0;

    for(int i = 1 ; i < n ; i++){
        next = [list[i2]*2 ,list[i3]*3 ,list[i5]*5].reduce((a , b) => a < b? a : b);
        list.add(next);

        if(next == list[i2]*2) i2++;
        if(next == list[i3]*3) i3++;
        if(next == list[i5]*5) i5++;

                        
    }
    return list.last;
    
  }
}


    // if (n == 1) return 1;
    // List<int> list = [];
    // list.add(1);
    // bool isUgly(int a) {
    //   while (a >= 2) {
    //     if (a % 2 == 0)
    //       a ~/= 2;
    //     else if (a % 3 == 0)
    //       a ~/= 3;
    //     else if (a % 5 == 0)
    //       a ~/= 5;
    //     else {
    //       return false;
    //     }
    //   }
    //   return true;
    // }

    // for (int i = 2; i <= n; i++) {
    //   if (isUgly(i) == true) {
    //     list.add(i);
    //   } else {
    //     n++;
    //   }
    // }
    // print(list);
    // return list.last;
    //} 
    //}


void main() {
  var sol = Solution();
  int n = 1352;
  print(sol.nthUglyNumber(n)); //402653184
}

