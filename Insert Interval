/*
 Time Complexity : O(N) for dövrü n qədər iterasiya edir.
 Space Complexity : O(N) əlavədən bir list yaradiriq n qədər yer tələb edir. Qalan dəyişənlə sabitdir.
 
 */

 import 'dart:math';

class Solution {
  List<List<int>> insert(List<List<int>> intervals, List<int> newInterval) {
    final list = <List<int>>[];

    int start = newInterval[0];
    int end = newInterval[1];


    for(var interval in intervals){
         // tam soldadırsa əlavə edib sonra Start və end dəyərlərini cari intervaldan başladırıq.
        if(end < interval[0]){

            list.add([start , end]);

            start = interval[0];
            end = interval[1];



        }
        // Sağdadırsa cari intervaldakı dəyərləri əlavə edirik listə
        else if(start > interval[1]){

            list.add([interval[0] , interval[1]]);

        }

        // əgər overlapping olursa o zaman Start mövcud olan ən kiçik dəyərə end isə ən böyük dəyərə bərabər olur
        else{
            start = min(start , interval[0]);
            end = max(end , interval[1]);
        }


    }

    list.add([start , end]);

    return list;

    
    
  }
}

void main(){

    Solution sol = Solution();

    List<List<int>> intervals = [[1,3],[6,9]];
    List<int>  newInterval = [2,5];

    print(sol.insert(intervals ,newInterval));



}
